// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Project4.Infrastructure.Persistence;

#nullable disable

namespace Project4.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240819223117_improveCatalogAndProductRelation")]
    partial class improveCatalogAndProductRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Project4.Domain.Entities.Batch", b =>
                {
                    b.Property<int>("BatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BatchId"));

                    b.Property<decimal?>("GrossPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ImportCost")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Origin")
                        .HasColumnType("text");

                    b.Property<decimal?>("ProfitMargin")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TransportCost")
                        .HasColumnType("numeric");

                    b.HasKey("BatchId");

                    b.ToTable("Batch", (string)null);
                });

            modelBuilder.Entity("Project4.Domain.Entities.Catalog", b =>
                {
                    b.Property<int>("CatalogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CatalogId"));

                    b.Property<string>("CatalogDescription")
                        .HasColumnType("text");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("CatalogId");

                    b.HasIndex("ProductCode")
                        .IsUnique();

                    b.ToTable("Catalogs", (string)null);
                });

            modelBuilder.Entity("Project4.Domain.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("BillTo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("IssueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TotalDue")
                        .HasColumnType("numeric");

                    b.HasKey("InvoiceId");

                    b.HasIndex("ProductId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("Project4.Domain.Entities.MarcasAutos", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("marcas_autos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yaris"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Celica"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Supra"
                        });
                });

            modelBuilder.Entity("Project4.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<bool?>("Available")
                        .HasColumnType("boolean");

                    b.Property<int?>("BatchId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ImportDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ProductCodeId")
                        .HasMaxLength(10)
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.HasIndex("BatchId");

                    b.HasIndex("ProductCodeId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Project4.Domain.Entities.ProductDetail", b =>
                {
                    b.Property<int>("ProductDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductDetailId"));

                    b.Property<int?>("Amount")
                        .HasColumnType("integer");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductImage")
                        .HasColumnType("text");

                    b.Property<string>("ProductModel")
                        .HasColumnType("text");

                    b.Property<decimal?>("UnitaryPrice")
                        .HasColumnType("numeric");

                    b.HasKey("ProductDetailId");

                    b.HasIndex("ProductId");

                    b.ToTable("Product_detail", (string)null);
                });

            modelBuilder.Entity("Project4.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<string>("Password")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Project4.Domain.Entities.Invoice", b =>
                {
                    b.HasOne("Project4.Domain.Entities.Product", "Product")
                        .WithMany("Invoices")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project4.Domain.Entities.Product", b =>
                {
                    b.HasOne("Project4.Domain.Entities.Batch", "Batch")
                        .WithMany("Products")
                        .HasForeignKey("BatchId");

                    b.HasOne("Project4.Domain.Entities.Catalog", "Catalog")
                        .WithMany("Products")
                        .HasForeignKey("ProductCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Batch");

                    b.Navigation("Catalog");
                });

            modelBuilder.Entity("Project4.Domain.Entities.ProductDetail", b =>
                {
                    b.HasOne("Project4.Domain.Entities.Product", "Product")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Project4.Domain.Entities.Batch", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Project4.Domain.Entities.Catalog", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Project4.Domain.Entities.Product", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("ProductDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
